{
    "collab_server" : "",
    "contents" : "\n# This is the server logic for a Shiny web application.\n# You can find out more about building applications with Shiny here:\n#\n# http://shiny.rstudio.com\n#\n\nlibrary(shiny)\nlibrary(dplyr)\nlibrary(rCharts)\nlibrary(ggplot2)\n\npeso_leo <- tbl_df(read.csv(\"/home/leonel/Downloads/Vitacora de peso - Sheet1.csv\")) \n\nshinyServer(function(input, output) {\n\n  dailyWeight <- peso_leo %>% mutate(game_date = as.numeric(as.POSIXct(as.Date(time, \"%m/%d/%Y\")))*1000 ,\n                                     Dani = Dani / mean(peso_leo$Dani) * mean(peso_leo$Leo))\n  quantiles = quantile(dailyWeight$Leo, probs = c(.025,.5,.975))\n  \n  output$plot_weight <- renderChart2({\n\n    coso <- hPlot(Leo ~ game_date  , data = dailyWeight)\n    \n    \n    coso$xAxis(type = 'datetime', labels = list(\n      format = '{value:%Y-%m-%d}'  \n    ))\n    \n    \n    coso$yAxis(title = list(text = \"Leo's weight\") , plotLines = list(\n      list(color = 'red', \n           # dashStyle = 'longdashdot',\n           value= mean(dailyWeight$Leo), \n           width= 2 ), \n      list(color = 'blue', \n           # dashStyle = 'longdashdot',\n           value= quantiles[[1]], \n           width= 2 ), \n      list(color = 'blue', \n           # dashStyle = 'longdashdot',\n           value= quantiles[[3]], \n           width= 2 )\n      ))\n      coso\n    \n    return(coso)\n  })\n  \n  output$tabla <- renderTable({\n    tablita <- as.data.frame(quantiles[-2])\n    # tablita$quatiles <- rownames(tablita)\n    names(tablita) <- c(\"weight\")\n    tablita\n    \n  })\n    \n  output$peso_leo <- renderPlot({\n    \n    \n  qplot(peso_leo$Leo, bins = 100) + geom_vline(xintercept = mean(peso_leo$Leo), color = \"red\") +\n    geom_vline(xintercept = quantiles[[1]], color = \"blue\") +\n    geom_vline(xintercept = quantiles[[3]], color = \"blue\") + \n    xlab(\"Weight\") + \n    ylab(\"Ocurrences\")\n  })\n  \n  output$chance <- renderText({\n    paste0(\"The best chance of guessing right is \" , \n          round(sum(peso_leo$Leo == 74.7) / length(peso_leo$Leo) * 100,2), \"%. The meassurement 74.7 happened \",\n          sum(peso_leo$Leo == 74.7) , \" out of \", length(peso_leo$Leo), \" times.\n          The mean weight is \", mean(peso_leo$Leo))\n    })\n  \n  \n  \n  output$other_weight <- renderChart2({\n\n    coso <- hPlot(Dani ~ game_date  , data = dailyWeight)\n    quantiles_other = quantile(dailyWeight$Dani, probs = c(.025,.5,.975))\n\n\n    coso$xAxis(type = 'datetime', labels = list(\n      format = '{value:%Y-%m-%d}'\n    ))\n\n\n    coso$yAxis(title = list(text = \"Other's weight\") , plotLines = list(\n      list(color = 'red',\n           # dashStyle = 'longdashdot',\n           value= mean(dailyWeight$Dani),\n           width= 2 ),\n      list(color = 'blue',\n           # dashStyle = 'longdashdot',\n           value= quantiles_other[[1]],\n           width= 2 ),\n      list(color = 'blue',\n           # dashStyle = 'longdashdot',\n           value= quantiles_other[[3]],\n           width= 2 )\n    ))\n    coso\n\n    return(coso)\n  })\n  \n  \n})\n",
    "created" : 1462529216672.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3000525180",
    "id" : "D538B423",
    "lastKnownWriteTime" : 1463578179,
    "last_content_update" : 1463578179931,
    "path" : "/srv/shiny-server/leos_weight/server.R",
    "project_path" : "server.R",
    "properties" : {
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}