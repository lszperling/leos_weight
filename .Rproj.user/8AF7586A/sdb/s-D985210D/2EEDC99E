{
    "collab_server" : "",
    "contents" : "library(ggplot2)\n\n\n# install.packages(\"gridExtra\")\nlibrary(gridExtra)\n\ngrid.arrange(plotFrance, plotRussia, plotItaly, ncol=3)\n\n\nfrance_questions <- tbl_df(read.csv(\"/home/leonel/Downloads/france.csv\", header = F))\n\nplotFrance <- qplot(france_questions$V7)\n\n\n\n\nrussia_questions <- tbl_df(read.csv(\"/home/leonel/Downloads/russia.csv\", header = F))\n\nplotRussia <- qplot(russia_questions$V7)\n\n\n\nitaly_questions <- tbl_df(read.csv(\"/home/leonel/Downloads/italy.csv\", header = F))\n\nplotItaly <- qplot(italy_questions$V7)\n\n\n\nquantiles_france <- quantile(france_questions$V7,probs = c(.33, .66), na.rm = T)\nquantiles_russia <- quantile(russia_questions$V7,probs = c(.33, .66), na.rm = T)\nquantiles_italy <- quantile(italy_questions$V7,probs = c(.33, .66), na.rm = T)\n\nsummary(france_questions$V7)\nsummary(russia_questions$V7)\nsummary(italy_questions$V7)\n\n\n\ncategorized_france <- france_questions %>% filter(!is.na(V7)) %>% \n  mutate(category = ifelse(V7 <= quantiles_france[[1]], \"A\", \n                           ifelse(V7 <= quantiles_france[[2]], \"B\", \"C\")) ) %>%  \n  select(category, V7)\n\ncategorized_france_test <- categorized_france %>% filter(category != \"A\")\n\n\ncategorized_france_test_C <- categorized_france %>% filter(category == \"C\")\n\n\n\ncategorized_france_test_complete <- bind_rows(categorized_france_test, categorized_france_test_C)\n\n\n\nqplot(categorized_france[sample(nrow(categorized_france), 30000, replace = T), ]$V7)\n\nqplot(categorized_france_test[sample(nrow(categorized_france_test_complete), 30000, replace = T), ]$V7, xlim = c(0,1))\n\n\nsummary(categorized_france[sample(nrow(categorized_france), 30000, replace = T), ]$V7)\nsummary(categorized_france_test_complete[sample(nrow(categorized_france_test_complete), 30000, replace = T), ]$V7)\n\n\ncategorized_france_test_complete %>% filter(is.na(category))\n\n\ncategorized_russia <- russia_questions %>% filter(!is.na(V7)) %>% \n  mutate(category = ifelse(V7 <= quantiles_russia[[1]], \"A\", \n                           ifelse(V7 <= quantiles_russia[[2]], \"B\", \"C\")) ) %>%  \n  select(category, V7)\n\n\ncategorized_russia_test <- categorized_russia %>% filter(category != \"A\")\n\n\nsd(categorized_russia_test$V7)\n\n\ngrid.arrange(\nqplot(categorized_russia$difficulty, xlim = c(0,1), ylim = c(0,700), bins = 100, main = \"Control bag\") + xlab(\"Difficutly\") + ylab(\"# questions\"),\nqplot(categorized_russia_test$difficulty, xlim = c(0,1), ylim = c(0,700), bins = 100, main = \"Easy bag\") + xlab(\"Difficutly\") + ylab(\"# questions\")\n)\n\n\nsd(categorized_russia_test$V7)\n\n\ncategorized_russia_test_percent <- categorized_russia_test\ncategorized_russia_test_percent <- categorized_russia_test_percent %>% mutate(ease = V7 * 100)\n\nvar(categorized_russia_test_percent$ease)\n\n\nqplot(categorized_france_test_complete$V7)\n\n\ncategorized_russia_test\n\n\nsd(categorized_russia$difficulty)\nsd(categorized_russia_test$difficulty)\n\ncategorized_russia <- categorized_russia %>% mutate(difficulty = 1-V7)\ncategorized_russia_test <- categorized_russia_test %>% mutate(difficulty = 1-V7)\n\ncategorized_russia_test[sample(nrow(categorized_russia_test), 3), ]\n\n\nlapply(1:1000, function(x){\n  (sample_n(categorized_russia_test, 1))$V7  \n}) %>% unlist() %>% mean()\n\npeso_2 <- tbl_df(read.csv(\"/home/leonel/Downloads/Vitacora de peso - Sheet1.csv\")) \n\nqplot(peso_leo$Leo)\nqplot(peso_2$Dani)\n\n\ndailyWeight <- peso_leo %>% mutate(game_date = as.numeric(as.POSIXct(as.Date(time, \"%m/%d/%Y\")))*1000  ) \nquantiles = quantile(dailyWeight$Leo, probs = c(.025,.5,.975))\n\nmean(peso_2$Dani)\n\ndailyWeight <- peso_2 %>% mutate(game_date = as.numeric(as.POSIXct(as.Date(time, \"%m/%d/%Y\")))*1000 , \n                                 Dani = Dani / mean(peso_2$Dani) * mean(peso_2$Leo)) \nquantiles = quantile(dailyWeight$Dani, probs = c(.025,.5,.975))\n\ncoso <- hPlot(Dani ~ game_date  , data = dailyWeight)\n\n\ncoso$xAxis(type = 'datetime', labels = list(\n  format = '{value:%Y-%m-%d}'  \n))\n\n\ncoso$yAxis(title = list(text = \"other's weight\") , plotLines = list(\n  list(color = 'red', \n       # dashStyle = 'longdashdot',\n       value= mean(dailyWeight$Dani), \n       width= 2 ), \n  list(color = 'blue', \n       # dashStyle = 'longdashdot',\n       value= quantiles[[1]], \n       width= 2 ), \n  list(color = 'blue', \n       # dashStyle = 'longdashdot',\n       value= quantiles[[3]], \n       width= 2 )\n))\ncoso\n\n\n\n",
    "created" : 1462794874000.000,
    "dirty" : true,
    "encoding" : "",
    "folds" : "",
    "hash" : "2203300656",
    "id" : "2EEDC99E",
    "lastKnownWriteTime" : 8535274769700971890,
    "last_content_update" : 1463577675632,
    "path" : null,
    "project_path" : null,
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 4,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}