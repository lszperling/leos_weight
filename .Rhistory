read.csv("/home/leonel/Downloads/Vitacora de peso - Sheet1.csv")
tbl_df(read.csv("/home/leonel/Downloads/Vitacora de peso - Sheet1.csv"))
library(dplyr)
tbl_df(read.csv("/home/leonel/Downloads/Vitacora de peso - Sheet1.csv"))
peso_leo <- tbl_df(read.csv("/home/leonel/Downloads/Vitacora de peso - Sheet1.csv")) %>% select(1,3)
peso_leo
peso_leo %>% mutate(game_date = as.numeric(as.POSIXct(as.Date(time)))*1000  )
peso_leo %>% mutate(fecha = as.Date(time))
peso_leo %>% mutate(fecha = as.Date(time, "%Y/%m/%d"))
peso_leo %>% mutate(fecha = as.Date(time, "%d/%m/%Y"))
peso_leo %>% mutate(fecha = as.Date(time, "m%/%d/%Y"))
peso_leo %>% mutate(fecha = as.Date(time, "%m/%d/%Y"))
players_by_day <- peso_leo %>% mutate(game_date = as.numeric(as.POSIXct(as.Date(time, "%m/%d/%Y")))*1000  )
players_by_day
coso <- hPlot(Leo ~ game_date  , data = players_by_day)
library(rCharts)
coso <- hPlot(Leo ~ game_date  , data = players_by_day)
coso$xAxis(type = 'datetime', labels = list(
format = '{value:%Y-%m-%d}'
))
return(coso)
coso
mean(players_by_day$Leo)
players_by_day <- peso_leo %>% mutate(game_date = as.numeric(as.POSIXct(as.Date(time, "%m/%d/%Y")))*1000  )
coso <- hPlot(Leo ~ game_date  , data = players_by_day)
coso$xAxis(type = 'datetime', labels = list(
format = '{value:%Y-%m-%d}'
))
coso$yAxis(title = list(text = "Leo's weight") , plotLines = list(
list(color = 'red',
# dashStyle = 'longdashdot',
value= mean(players_by_day$Leo),
width= 2 )))
coso
quantile(players_by_day$Leo, probs(.5))
quantile(players_by_day$Leo, probs = c(.5))
quantile(players_by_day$Leo, probs = c(.1,.5,.9))
quantile(players_by_day$Leo, probs = c(.05,.5,.95))
quantiles = quantile(players_by_day$Leo, probs = c(.05,.5,.95))
players_by_day <- peso_leo %>% mutate(game_date = as.numeric(as.POSIXct(as.Date(time, "%m/%d/%Y")))*1000  )
quantiles = quantile(players_by_day$Leo, probs = c(.05,.5,.95))
coso <- hPlot(Leo ~ game_date  , data = players_by_day)
coso$xAxis(type = 'datetime', labels = list(
format = '{value:%Y-%m-%d}'
))
coso$yAxis(title = list(text = "Leo's weight") , plotLines = list(
list(color = 'red',
# dashStyle = 'longdashdot',
value= mean(players_by_day$Leo),
width= 2 ),
list(color = 'blue',
# dashStyle = 'longdashdot',
value= quantiles[1],
width= 2 ),
list(color = 'blue',
# dashStyle = 'longdashdot',
value= quantiles[3],
width= 2 )
))
coso
quantiles[1]
quantiles[[1]]
players_by_day <- peso_leo %>% mutate(game_date = as.numeric(as.POSIXct(as.Date(time, "%m/%d/%Y")))*1000  )
quantiles = quantile(players_by_day$Leo, probs = c(.05,.5,.95))
coso <- hPlot(Leo ~ game_date  , data = players_by_day)
coso$xAxis(type = 'datetime', labels = list(
format = '{value:%Y-%m-%d}'
))
coso$yAxis(title = list(text = "Leo's weight") , plotLines = list(
list(color = 'red',
# dashStyle = 'longdashdot',
value= mean(players_by_day$Leo),
width= 2 ),
list(color = 'blue',
# dashStyle = 'longdashdot',
value= quantiles[[1]],
width= 2 ),
list(color = 'blue',
# dashStyle = 'longdashdot',
value= quantiles[[3]],
width= 2 )
))
coso
as.data.frame(uantile(players_by_day$Leo, probs = c(.05,.5,.95)))
as.data.frame(quantile(players_by_day$Leo, probs = c(.05,.5,.95)))
peso_leo$Leo
quantile(peso_leo$Leo, probs = c(.05,.5,.95))
as.data.frame(quantile(peso_leo$Leo, probs = c(.05,.5,.95)))
names(tablita) <- c("weight")
tablita <- as.data.frame(quantile(peso_leo$Leo, probs = c(.05,.5,.95)))
names(tablita) <- c("weight")
tablita
colnames(tablita)
rownames(tablita)
tablita <- as.data.frame(quantile(peso_leo$Leo, probs = c(.05,.5,.95)))
tablita$quatiles <- rownames(tablita)
tablita
names(tablita) <- c("weight", "quantiles")
tablita <- as.data.frame(quantile(peso_leo$Leo, probs = c(.05,.95)))
# tablita$quatiles <- rownames(tablita)
names(tablita) <- c("weight")
tablita
tablita
qplot(peso_leo$Leo)
library(ggplot2)
qplot(peso_leo$Leo)
qplot(peso_leo$Leo, bins = 100) + geom_vline(75)
qplot(peso_leo$Leo, bins = 100) + geom_vline(xintercept = 75)
qplot(peso_leo$Leo, bins = 100) + geom_vline(xintercept = 75, color = "red")
qplot(peso_leo$Leo, bins = 100) + geom_vline(mean(peso_leo$Leo) = 75, color = "red")
qplot(peso_leo$Leo, bins = 100) + geom_vline(mean(peso_leo$Leo) = 75, color = "red")
qplot(peso_leo$Leo, bins = 100) + geom_vline(xintercept = mean(peso_leo$Leo), color = "red")
qplot(peso_leo$Leo, bins = 100) + geom_vline(xintercept = mean(peso_leo$Leo), color = "red") +
geom_vline(xintercept = quantiles[[1]], color = "blue")
qplot(peso_leo$Leo, bins = 100) + geom_vline(xintercept = mean(peso_leo$Leo), color = "red") +
geom_vline(xintercept = quantiles[[1]], color = "blue") +
geom_vline(xintercept = quantiles[[3]], color = "blue")
qplot(peso_leo$Leo, bins = 100) + geom_vline(xintercept = mean(peso_leo$Leo), color = "red") +
geom_vline(xintercept = quantiles[[1]], color = "blue") +
geom_vline(xintercept = quantiles[[3]], color = "blue") +
xlab("hola")
qplot(peso_leo$Leo, bins = 100) + geom_vline(xintercept = mean(peso_leo$Leo), color = "red") +
geom_vline(xintercept = quantiles[[1]], color = "blue") +
geom_vline(xintercept = quantiles[[3]], color = "blue") +
xlab("Weight") +
ylab("Ocurrences")
shiny::runApp()
peso_leo$Leo == 74.7
sum(peso_leo$Leo == 74.7)
sum(peso_leo$Leo == 74.7) / length(peso_leo$Leo)
sum(peso_leo$Leo == 74.7) / length(peso_leo$Leo) * 100
round(sum(peso_leo$Leo == 74.7) / length(peso_leo$Leo) * 100,2)
62/5
62/25
62/20
